// Code generated by go generate; DO NOT EDIT.
package main

// ControlPanelBroadcaster is the context for keeping track of the clients we should
// broadcast messages to.
type ControlPanelBroadcaster struct {
	clients map[*ControlPanelReceiver]bool
}

// NewControlPanelBroadcaster creates a new ControlPanelBroadcaster.
func NewControlPanelBroadcaster() *ControlPanelBroadcaster {
	return &ControlPanelBroadcaster{
		clients: make(map[*ControlPanelReceiver]bool),
	}
}

// Push adds a new receiver to the ControlPanel broadcaster.
func (bcast *ControlPanelBroadcaster) Push(c *ControlPanelReceiver) {
	bcast.clients[c] = true
}

// Pop removes a receiver from the ControlPanel broadcast.
func (bcast *ControlPanelBroadcaster) Pop(c *ControlPanelReceiver) {
	delete(bcast.clients, c)
}

// Broadcast calls the given routine for all receivers listening to the broadcast.
func (bcast *ControlPanelBroadcaster) Broadcast(routine func(*ControlPanelReceiver)) {
	// Broadcasts to all clients.
	for c := range bcast.clients {
		routine(c)
	}
}
