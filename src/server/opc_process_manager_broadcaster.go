// Code generated by go generate; DO NOT EDIT.
package main

// OpcProcessManagerBroadcaster is the context for keeping track of the clients we should
// broadcast messages to.
type OpcProcessManagerBroadcaster struct {
	clients map[*OpcProcessManagerReceiver]bool
}

// NewOpcProcessManagerBroadcaster creates a new OpcProcessManagerBroadcaster.
func NewOpcProcessManagerBroadcaster() *OpcProcessManagerBroadcaster {
	return &OpcProcessManagerBroadcaster{
		clients: make(map[*OpcProcessManagerReceiver]bool),
	}
}

// Push adds a new receiver to the OpcProcessManager broadcaster.
func (bcast *OpcProcessManagerBroadcaster) Push(c *OpcProcessManagerReceiver) {
	bcast.clients[c] = true
}

// Pop removes a receiver from the OpcProcessManager broadcast.
func (bcast *OpcProcessManagerBroadcaster) Pop(c *OpcProcessManagerReceiver) {
	delete(bcast.clients, c)
}

// Broadcast calls the given routine for all receivers listening to the broadcast.
func (bcast *OpcProcessManagerBroadcaster) Broadcast(routine func(*OpcProcessManagerReceiver)) {
	// Broadcasts to all clients.
	for c := range bcast.clients {
		routine(c)
	}
}
