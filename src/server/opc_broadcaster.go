// Code generated by go generate; DO NOT EDIT.
package main

// OpcBroadcaster is the context for keeping track of the clients we should
// broadcast messages to.
type OpcBroadcaster struct {
	clients map[*OpcReceiver]bool
}

// NewOpcBroadcaster creates a new OpcBroadcaster.
func NewOpcBroadcaster() *OpcBroadcaster {
	return &OpcBroadcaster{
		clients: make(map[*OpcReceiver]bool),
	}
}

// Push adds a new receiver to the Opc broadcaster.
func (bcast *OpcBroadcaster) Push(c *OpcReceiver) {
	bcast.clients[c] = true
}

// Pop removes a receiver from the Opc broadcast.
func (bcast *OpcBroadcaster) Pop(c *OpcReceiver) {
	delete(bcast.clients, c)
}

// Broadcast calls the given routine for all receivers listening to the broadcast.
func (bcast *OpcBroadcaster) Broadcast(routine func(*OpcReceiver)) {
	// Broadcasts to all clients.
	for c := range bcast.clients {
		routine(c)
	}
}
